name: Build e Deploy das APIs PetDex

on:
  push:
    branches:
      - main
      - dev
      - SCRUM-**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout do repositório
        uses: actions/checkout@v4

      - name: ⚙️ Definir nome da branch
        id: vars
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: 🔑 Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 🏗️ Build e Push da API Java
        run: |
          cd api-java
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-java:${BRANCH_NAME} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-java:${BRANCH_NAME}

      - name: 🐍 Build e Push da API Python
        run: |
          cd api-python
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-python:${BRANCH_NAME} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-python:${BRANCH_NAME}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 🧩 Checkout do repositório
        uses: actions/checkout@v4

      - name: 🧹 Remover docker-compose antigo na VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            echo "🔹 Removendo docker-compose antigo..."
            if [ -f "/home/${{ secrets.AZURE_VM_USER }}/petdex/docker-compose.yml" ]; then
              rm -f /home/${{ secrets.AZURE_VM_USER }}/petdex/docker-compose.yml
              echo "✅ Arquivo removido com sucesso."
            else
              echo "ℹ️ Nenhum docker-compose.yml encontrado."
            fi

      - name: 📦 Copiar arquivos para a VM via rsync
        env:
          SSH_KEY: ${{ secrets.AZURE_VM_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem

          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" \
            docker-compose.yml \
            api-java/ \
            api-python/ \
            ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:/home/${{ secrets.AZURE_VM_USER }}/petdex/

      - name: 🚀 Executar deploy via Docker Compose
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            echo "🚀 Atualizando APIs da PetDex na VM..."
            cd /home/${{ secrets.AZURE_VM_USER }}/petdex
            docker compose pull
            docker compose up -d --build
            echo "✅ Deploy concluído com sucesso!"
