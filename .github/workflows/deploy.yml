name: üöÄ Deploy PetDex

on:
  push:
    branches:
      - main
      - master
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Faz checkout do reposit√≥rio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Conecta na VM e remove pasta antiga com nome errado
      - name: Remover diret√≥rio docker-compose.yml se existir
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            echo "üîπ Removendo diret√≥rio docker-compose.yml (se existir)..."
            if [ -d "/home/${{ secrets.AZURE_VM_USER }}/petdex/docker-compose.yml" ]; then
              rm -rf /home/${{ secrets.AZURE_VM_USER }}/petdex/docker-compose.yml
              echo "‚úÖ Diret√≥rio removido com sucesso."
            else
              echo "‚ÑπÔ∏è Nenhum diret√≥rio com esse nome encontrado."
            fi

      # 3Ô∏è‚É£ Copia os arquivos do projeto e o docker-compose.yml para a VM
      - name: Copiar arquivos para a VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          source: |
            docker-compose.yml
            ./api-gateway/**
            ./auth-service/**
            ./pet-service/**
          target: /home/${{ secrets.AZURE_VM_USER }}/petdex/
          overwrite: true

      # 4Ô∏è‚É£ Executa o deploy na VM
      - name: Executar deploy via Docker Compose
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            echo "üöÄ Atualizando APIs da PetDex na VM..."
            cd /home/${{ secrets.AZURE_VM_USER }}/petdex
            docker compose pull
            docker compose up -d --build
            echo "‚úÖ Deploy conclu√≠do com sucesso!"
