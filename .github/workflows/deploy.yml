name: Build e Deploy das APIs PetDex

on:
  push:
    branches:
      - main
      - dev
      - SCRUM-**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Faz checkout do c√≥digo-fonte
      - name: Checkout
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Define a vari√°vel com o nome da branch
      - name: Definir nome da branch
        id: vars
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # 3Ô∏è‚É£ Login no Docker Hub usando secrets
      - name: Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # 4Ô∏è‚É£ Build e Push da API Java
      - name: Build e Push da API Java
        run: |
          cd api-java
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-java:${BRANCH_NAME} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-java:${BRANCH_NAME}

      # 5Ô∏è‚É£ Build e Push da API Python
      - name: Build e Push da API Python
        run: |
          cd api-python
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-python:${BRANCH_NAME} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-python:${BRANCH_NAME}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      # 6Ô∏è‚É£ Copiar docker-compose.yml para a VM
      - name: Copiar docker-compose.yml para VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.AZURE_VM_USER }}/petdex/"
          overwrite: true   # ‚úÖ permite substituir o arquivo se j√° existir

      # 7Ô∏è‚É£ Conectar na VM e atualizar containers
      - name: Conectar na VM e atualizar containers
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          envs: DATABASE_URI,API_KEY,DOCKERHUB_USERNAME
          script: |
            echo "üì¶ Atualizando APIs da PetDex na VM..."

            cd /home/${{ secrets.AZURE_VM_USER }}/petdex
            ls -lh

            export DATABASE_URI="${{ secrets.DATABASE_URI }}"
            export API_KEY="${{ secrets.API_KEY }}"
            export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"

            echo "‚ñ∂Ô∏è Puxando novas imagens..."
            docker compose pull

            echo "üßπ Removendo containers antigos..."
            docker compose down

            echo "üöÄ Subindo novas vers√µes..."
            docker compose up -d

            echo "‚úÖ Deploy conclu√≠do com sucesso!"
